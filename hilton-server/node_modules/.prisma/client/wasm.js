
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  detectRuntime,
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.9.1
 * Query Engine version: 23fdc5965b1e05fc54e5f26ed3de66776b93de64
 */
Prisma.prismaVersion = {
  client: "5.9.1",
  engine: "23fdc5965b1e05fc54e5f26ed3de66776b93de64"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  fullName: 'fullName',
  email: 'email',
  password: 'password',
  username: 'username',
  profilePic: 'profilePic',
  birthDate: 'birthDate',
  phoneNum: 'phoneNum',
  isDeleted: 'isDeleted',
  emailConfirmed: 'emailConfirmed',
  role: 'role'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  fName: 'fName',
  lName: 'lName',
  username: 'username',
  email: 'email',
  password: 'password',
  profilePic: 'profilePic',
  birthDate: 'birthDate',
  country: 'country',
  nationalID: 'nationalID',
  isBlocked: 'isBlocked',
  isDeleted: 'isDeleted',
  emailConfirmed: 'emailConfirmed',
  role: 'role'
};

exports.Prisma.ResetTokenScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  token: 'token',
  userId: 'userId',
  adminId: 'adminId',
  expireAt: 'expireAt'
};

exports.Prisma.ConfirmTokenScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  token: 'token',
  userId: 'userId',
  adminId: 'adminId',
  expireAt: 'expireAt'
};

exports.Prisma.RefreshTokenScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  token: 'token',
  userId: 'userId',
  adminId: 'adminId',
  expireAt: 'expireAt'
};

exports.Prisma.RoomScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  roomNum: 'roomNum',
  types: 'types',
  price: 'price',
  description: 'description',
  aminities: 'aminities',
  images: 'images',
  view: 'view',
  isDeleted: 'isDeleted'
};

exports.Prisma.RoomReservationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  roomId: 'roomId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  checkIn: 'checkIn',
  checkOut: 'checkOut',
  adults: 'adults',
  children: 'children',
  isDeleted: 'isDeleted',
  deletedAt: 'deletedAt'
};

exports.Prisma.ExtraServicesScalarFieldEnum = {
  id: 'id',
  roomId: 'roomId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  name: 'name',
  price: 'price',
  facilities: 'facilities',
  isDeleted: 'isDeleted'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  rating: 'rating',
  comment: 'comment',
  isDeleted: 'isDeleted'
};

exports.Prisma.RestaurantScalarFieldEnum = {
  id: 'id',
  adminId: 'adminId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  description: 'description'
};

exports.Prisma.MenuScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  restaurantId: 'restaurantId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  menuTypes: 'menuTypes',
  name: 'name',
  ingredients: 'ingredients',
  price: 'price',
  image: 'image',
  isDeleted: 'isDeleted',
  deletedAt: 'deletedAt'
};

exports.Prisma.ClubHouseScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  clubhouseTypes: 'clubhouseTypes',
  description: 'description',
  startTime: 'startTime',
  endTime: 'endTime',
  isDeleted: 'isDeleted'
};

exports.Prisma.FAQSScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  question: 'question',
  answer: 'answer',
  isDeleted: 'isDeleted'
};

exports.Prisma.NewsScalarFieldEnum = {
  id: 'id',
  adminId: 'adminId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  title: 'title',
  subTitle: 'subTitle',
  description: 'description',
  images: 'images',
  isDeleted: 'isDeleted'
};

exports.Prisma.ReplyScalarFieldEnum = {
  id: 'id',
  newsId: 'newsId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  fullName: 'fullName',
  email: 'email',
  comment: 'comment',
  isDeleted: 'isDeleted'
};

exports.Prisma.ContactUsScalarFieldEnum = {
  id: 'id',
  adminId: 'adminId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  fullName: 'fullName',
  email: 'email',
  phoneNum: 'phoneNum',
  subject: 'subject',
  description: 'description',
  isDeleted: 'isDeleted',
  isRead: 'isRead'
};

exports.Prisma.AppSettingsScalarFieldEnum = {
  id: 'id',
  adminId: 'adminId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  hotelName: 'hotelName',
  logo: 'logo',
  address: 'address',
  phoneNum: 'phoneNum',
  email: 'email',
  socialMedia: 'socialMedia'
};

exports.Prisma.HomeSlidersScalarFieldEnum = {
  id: 'id',
  adminId: 'adminId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  photo: 'photo',
  header: 'header',
  paragraph: 'paragraph',
  isDeleted: 'isDeleted'
};

exports.Prisma.PromotionVidScalarFieldEnum = {
  id: 'id',
  adminId: 'adminId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  video: 'video',
  description: 'description'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.ROLE = exports.$Enums.ROLE = {
  USER: 'USER',
  ADMIN: 'ADMIN'
};

exports.RoomTypes = exports.$Enums.RoomTypes = {
  JUNIOR_SUITE: 'JUNIOR_SUITE',
  FAMILY_ROOM: 'FAMILY_ROOM',
  DOUBLE_ROOM: 'DOUBLE_ROOM',
  DELAUX_ROOM: 'DELAUX_ROOM',
  SUPERIOR_ROOM: 'SUPERIOR_ROOM'
};

exports.MenuTypes = exports.$Enums.MenuTypes = {
  STARTERS: 'STARTERS',
  MAINS: 'MAINS',
  SALADS: 'SALADS',
  WINE: 'WINE'
};

exports.clubhouseTypes = exports.$Enums.clubhouseTypes = {
  SPA: 'SPA',
  GYM: 'GYM',
  HEALTHCLUB: 'HEALTHCLUB'
};

exports.Prisma.ModelName = {
  Admin: 'Admin',
  User: 'User',
  ResetToken: 'ResetToken',
  ConfirmToken: 'ConfirmToken',
  RefreshToken: 'RefreshToken',
  Room: 'Room',
  RoomReservation: 'RoomReservation',
  ExtraServices: 'ExtraServices',
  Review: 'Review',
  Restaurant: 'Restaurant',
  Menu: 'Menu',
  ClubHouse: 'ClubHouse',
  FAQS: 'FAQS',
  News: 'News',
  Reply: 'Reply',
  ContactUs: 'ContactUs',
  AppSettings: 'AppSettings',
  HomeSliders: 'HomeSliders',
  PromotionVid: 'PromotionVid'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        const runtime = detectRuntime()
        const edgeRuntimeName = {
          'workerd': 'Cloudflare Workers',
          'deno': 'Deno and Deno Deploy',
          'netlify': 'Netlify Edge Functions',
          'edge-light': 'Vercel Edge Functions or Edge Middleware',
        }[runtime]

        let message = 'PrismaClient is unable to run in '
        if (edgeRuntimeName !== undefined) {
          message += edgeRuntimeName + '. As an alternative, try Accelerate: https://pris.ly/d/accelerate.'
        } else {
          message += 'this browser environment, or has been bundled for the browser (running in `' + runtime + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
